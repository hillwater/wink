 -----
 Locking
 -----
 -----

~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~ 
~~ http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Locking
  
  This example is located under <<<examples/Locking>>>

  * Extends the SimpleDefects functionality with example how to use entity tags (ETag) and 
    preconditions to provide the optimistic concurrency control (OCC)
    
  * This example extends the SimpleDefect example and adds the functionality of Optimistic Locking (OCC).
  
  * In this example the locking is implemented using the hashcode of the object.
  
  * Other implementations can use revisions (see the History example)
  
  * The entities returned by the server contain an Entity Tag (ETag).
  
  * While updating the defects, send the "If-Match" http header  with the value of the entity tag in order to invoke the OCC verification.
  
  * In order to retrieve the entry only if it was updated, send the "If-None-Match" http header with the value of ETag.
  
  * The list of all defects is returned as an Atom feed on this URI: {{{http://localhost:8080/Locking/rest/defects}http://localhost:8080/Locking/rest/defects}}
