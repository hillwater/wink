# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#  
#   http://www.apache.org/licenses/LICENSE-2.0
#  
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.  

# Class and Method Validation
classNotAProvider={} is not a provider. Ignoring.
classNotAResourceNorProvider={} is neither a resource nor a provider. Ignoring.
classNotADynamicResourceNorResourceNorProvider={} is not a dynamic resource, resource, or provider. Ignoring.
classAlreadyAdded=The class {} was already added. Ignored.
classNotValid=The class {} may only have one of the following declarations: {}, {}, {}
classIsUnknownProvider=Annotated @Provider class does not implement a recognized Provider interface: {}
isNotAClass={} is not a class. Ignoring.
resourceClassNotValid=The resource class {} is not a valid resource. Ignoring.
classInstantiationException=Failed to instantiate class {}.
classIllegalAccess=Illegal access to {}.
loadingClassToApplication=Class {} was added to application.
loadingApplication=Loading application from {}.


exceptionOccurredDuringClassProcessing=An exception occurred during processing of class {}. Ignoring class.
listExceptionDuringClassProcessing=The following exception occurred during processing of class: 
exceptionOccurredDuringSingletonProcessing=An exception occurred during processing of singleton {}. Ignoring singleton.
listExceptionDuringSingletonProcessing=The following exception occurred during processing of class: 
exceptionOccurredDuringInstanceProcessing=An exception occurred during processing of instance {}. Ignoring.
listExceptionDuringInstanceProcessing=The following exception occurred during processing of instance: 

methodNotAnnotatedCorrectly=The method {} in class {} is not annotated with an http method designator nor the Path annotation. This method will be ignored.
subresourceLocatorIllegalEntityParameter=Sub-Resource locator {} contains an illegal entity parameter. The locator will be ignored.
subresourceLocatorAnnotatedConsumesProduces=Sub-Resource locator {} is annotated with Consumes/Produces. These annotations are ignored for sub-resource locators

# Loading config
configNotFound=Could not find {}. Ignoring.
exceptionClosingFile=Exception when closing file
propertyNotDefined={} property was not defined.
alternateShortcutMapLoadFailure=Failed to load alternateShortcutMap
alternateShortcutMapCloseFailure=Exception when closing file:  

# Provider Information
uploadDirDoesNotExist=Upload directory '{}' does not exist or is not a directory, uploading entity to default temporary directory
cannotUseFileAsResponse=Can not write file {} to response, file is not readable or is a directory

jaxbObjectFactoryInstantiate=Failed to instantiate object factory for {}

# internals
mediaTypeSetAlreadyContains=The set already contains {}. Skipping...
mediaTypeMapperIncompleteRecord=Record {} is not complete, therefore ignored

# writing
noWriterOrDataSourceProvider=Could not find a writer or DataSourceProvider for {} type and {} mediaType.
noWriterFound=Could not find a writer for {} type and {} mediaType.

# Spring
springClassReplaceNewerObjectFactory=The {} was replaced by a newer object factory.
springBeanClassNotDynamicResource=The bean {} of class {} is not a DynamicResource.
springBeanNotResourceNorProvider=The bean {} of class {} is neither resource nor provider
springExceptionOccurredDuringFieldInject=Exception occured during the fields injection for bean: 
 
# Injection
injectionFailureSingleton=Failed to inject fields of singleton {}

# Asset Provider
assetLocatorMethodMoreThanOneEntityParam=Asset locator method {} has more than one entity parameter
assetMethodInvokeError=Error invoking asset method {} 
assetMustHavePublicConstructor=Failed to instantiate asset {}. Assets must have a default public contructor.
assetCannotInstantiate=Cannot instantiate asset {}

# Atom Provider
atomRequestEntityNotAtomEntry=Request entity is not an atom entry (it was unmarshalled as {})
atomRequestEntityNotAtomFeed=Request entity is not an atom feed (it was unmarshalled as {})

# JSON Provider
jsonErrorSAXParserFeature=Error while setting SAX parser feature for JSON provider
jsonFailConvertXMLToJSON=Failed to convert XML to JSON
jsonFailConvertJAXBToJSON=Failed to convert JAXB object {} to JSONObject
jsonFailWriteJSONObject=Failed to write JSONObject
jsonFailReadJSONObject=Failed to read JSONObject
jsonFailWriteJSONArray=Failed to write JSONArray
jsonFailReadJSONArray=Failed to read JSONArray

# JAXB Provider
jaxbObjectFactoryNotFound=ObjectFactory for {} was not found
jaxbElementFailToBuild=Failed to build JAXBElement for {}
jaxbObjectFactoryNotAnnotatedXMLRegistry=Found ObjectFactory for {} is not annotated with XmlRegistry.class
jaxbFailToUnmarshal=Failed to unmarshal {}
jaxbFailToMarshal=Failed to marshal {}
jaxbCreateDefaultJAXBElement=Creating default JAXBElement for {}

# Failure Messages
mediaTypeWrongFormat=Wrong MediaType format for MediaType: %1$s
methodDoesNotHandleType=Method doesn't handle {}
unhandledExceptionToContainer=Unhandled exception
exceptionOccurredDuringInvocation=%s occured during the handlers chain invocation

# Contexts
uriBadBaseURI=bad base URI: 

# Error Flow
exceptionOccurredDuringExceptionMapper=Exception occured while executing toResponse of the ExceptionMapper

# WebDAV
webDAVNoEditOrSelfLink=The resource {} has set no edit or self link

noMethodInClassSupportsHTTPMethod=Could not find any method in class {} that supports {}

# Client Handler
clientIssueRequest=Issuing client {} method request to URI at {} with {} entity class and {} headers
clientAcceptHeaderHandlerSetAccept=Accept header automatically set to: {}
clientResponseIsErrorCode=Client response is an error code: {}

# Server Handlers
checkLocationHeaderHandlerIllegalArg=Mandatory 'Location' header was not set for status code %1$s
populateResponseMediaTypeHandlerFromCompatibleMessageBodyWriters=Content-Type not specified via Response object or via @Produces annotation so automatically setting via generic-type compatible MessageBodyWriter providers
populateResponseMediaTypeHandlerNoAcceptableResponse=No acceptable concrete Content-Types, so sending a 406 Not Acceptable response to the client.

# Servlet/Filter Messages
restServletJAXRSApplicationInitParam=Using application class {} named in init-param {}
restServletWinkApplicationInitParam=Using application classes {} named in init-param {}
restServletUseDeploymentConfigurationParam=Using deployment configuration class {} named in init-param {}
restServletUsePropertiesFileAtLocation=Using properties file at {} named in init-param {}
adminServletRequestProcessorInitBeforeAdmin=Request processor should be initialized prior calling to admin servlet.

rootResourceShouldBeAnnotatedDirectly=The root resource class {0} should be annotated directly.  In environments where annotation scanning is done automatically without an Application sub-class, the class may not be detected as a root resource.
providerShouldBeAnnotatedDirectly=The provider class {0} should be annotated directly.  In environments where annotation scanning is done automatically without an Application sub-class, the class may not be detected as a provider.

